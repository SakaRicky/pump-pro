// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Sale {
  id           Int          @id @default(autoincrement())
  user         User         @relation(fields: [user_id], references: [id])
  user_id      String
  total_amount Int
  created_at   DateTime     @default(now())
  saleDetails  SaleDetail[]
}

model SaleDetail {
  id           Int      @id @default(autoincrement())
  sale         Sale     @relation(fields: [sale_id], references: [id], onDelete: Cascade)
  sale_id      Int
  product      Product  @relation(fields: [product_id], references: [id])
  product_id   String
  unit_price   Int
  quantity     Int
  total_amount Int
  created_at   DateTime @default(now())
}

model Product {
  id             String          @id @default(uuid())
  saleDetails    SaleDetail[]
  category       ProductCategory @relation(fields: [category_id], references: [id])
  category_id    String
  name           String          @unique
  description    String?
  image          String?
  quantity       Int
  purchase_price Int
  selling_price  Int
  reorder_point  Int
  created_at     DateTime        @default(now())
}

model ProductCategory {
  id          String    @id @default(uuid())
  products    Product[]
  name        String
  description String?
  created_at  DateTime  @default(now())
}

model User {
  id              String      @id @default(uuid())
  dailySales      DailySale[]
  Sales           Sale[]
  names           String
  date_of_birth   DateTime
  username        String      @unique
  gender          Gender
  phone           String
  salary          Int
  godfather_phone String
  localisation    String?
  email           String?
  password_hash   String?
  CNI_number      String
  profile_picture String?
  role            Role        @default(USER)
  created_at      DateTime    @default(now())
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  USER
  ADMIN
  SALE
  PUMPIST
}

model DailySale {
  id              Int      @id @default(autoincrement())
  user            User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id         String
  expected_amount Float
  amount_given    Float
  difference      Float
  start_index     Int?
  stop_index      Int?
  created_at      DateTime @default(now())
}

model PetrolSale {
  id           Int @id @default(autoincrement())
  pertol_price Int
  gasoil_price Int
  stock_petrol Int
  stock_gasoil Int
}
